apiVersion: v1
kind: Namespace
metadata:
  name: overseerr
  labels:
    name: overseerr
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: overseerr-statefulset
  namespace: overseerr
  labels:
    app: overseerr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: overseerr
  template:
    metadata:
      labels:
        app: overseerr
    spec:
      containers:
      - name: overseerr
        image: sctx/overseerr
        ports:
        - containerPort: 5055
        volumeMounts:
        - mountPath: "/app/config"
          name: overseerr-pvc
        env:
          - name: LOG_LEVEL
            value: "debug"
          - name: PORT
            value: "5055"
          - name: TZ
            value: "America/Chicago"
  volumeClaimTemplates:
  - metadata:
      name: overseerr-pvc
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
      storageClassName: do-block-storage
---
apiVersion: v1
kind: Service
metadata:
  name: overseerr-service
  namespace: overseerr
  labels:
    app: overseerr
spec:
  type: ClusterIP
  selector:
    app: overseerr
  ports:
  - port: 80
    targetPort: 5055
    protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: overseerr-ingress
  namespace: overseerr
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
      - overseerr.freeceweed.com
      secretName: letsencrypt-prod
  rules:
    - host: overseerr.freeceweed.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: overseerr-service
                port:
                  number: 80